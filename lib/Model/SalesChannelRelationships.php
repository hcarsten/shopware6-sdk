<?php
/**
 * SalesChannelRelationships
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shopware Management API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.15
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SalesChannelRelationships Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesChannelRelationships implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sales_channel_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'currencies' => '\Swagger\Client\Model\SalesChannelRelationshipsCurrencies',
'languages' => '\Swagger\Client\Model\SalesChannelRelationshipsLanguages',
'countries' => '\Swagger\Client\Model\SalesChannelRelationshipsCountries',
'payment_methods' => '\Swagger\Client\Model\SalesChannelRelationshipsPaymentMethods',
'shipping_methods' => '\Swagger\Client\Model\SalesChannelRelationshipsShippingMethods',
'type' => '\Swagger\Client\Model\SalesChannelRelationshipsType',
'language' => '\Swagger\Client\Model\SalesChannelRelationshipsLanguage',
'customer_group' => '\Swagger\Client\Model\SalesChannelRelationshipsCustomerGroup',
'currency' => '\Swagger\Client\Model\SalesChannelRelationshipsCurrency',
'payment_method' => '\Swagger\Client\Model\SalesChannelRelationshipsPaymentMethod',
'shipping_method' => '\Swagger\Client\Model\SalesChannelRelationshipsShippingMethod',
'country' => '\Swagger\Client\Model\SalesChannelRelationshipsCountry',
'orders' => '\Swagger\Client\Model\SalesChannelRelationshipsOrders',
'customers' => '\Swagger\Client\Model\SalesChannelRelationshipsCustomers',
'domains' => '\Swagger\Client\Model\SalesChannelRelationshipsDomains',
'system_configs' => '\Swagger\Client\Model\SalesChannelRelationshipsSystemConfigs',
'navigation_category' => '\Swagger\Client\Model\SalesChannelRelationshipsNavigationCategory',
'footer_category' => '\Swagger\Client\Model\SalesChannelRelationshipsFooterCategory',
'service_category' => '\Swagger\Client\Model\SalesChannelRelationshipsServiceCategory',
'product_visibilities' => '\Swagger\Client\Model\SalesChannelRelationshipsProductVisibilities',
'mail_header_footer' => '\Swagger\Client\Model\SalesChannelRelationshipsMailHeaderFooter',
'newsletter_recipients' => '\Swagger\Client\Model\SalesChannelRelationshipsNewsletterRecipients',
'mail_templates' => '\Swagger\Client\Model\SalesChannelRelationshipsMailTemplates',
'number_range_sales_channels' => '\Swagger\Client\Model\SalesChannelRelationshipsNumberRangeSalesChannels',
'promotion_sales_channels' => '\Swagger\Client\Model\SalesChannelRelationshipsPromotionSalesChannels',
'document_base_config_sales_channels' => '\Swagger\Client\Model\SalesChannelRelationshipsDocumentBaseConfigSalesChannels',
'product_reviews' => '\Swagger\Client\Model\SalesChannelRelationshipsProductReviews',
'seo_urls' => '\Swagger\Client\Model\SalesChannelRelationshipsSeoUrls',
'seo_url_templates' => '\Swagger\Client\Model\SalesChannelRelationshipsSeoUrlTemplates',
'main_categories' => '\Swagger\Client\Model\SalesChannelRelationshipsMainCategories',
'product_exports' => '\Swagger\Client\Model\SalesChannelRelationshipsProductExports'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'currencies' => null,
'languages' => null,
'countries' => null,
'payment_methods' => null,
'shipping_methods' => null,
'type' => null,
'language' => null,
'customer_group' => null,
'currency' => null,
'payment_method' => null,
'shipping_method' => null,
'country' => null,
'orders' => null,
'customers' => null,
'domains' => null,
'system_configs' => null,
'navigation_category' => null,
'footer_category' => null,
'service_category' => null,
'product_visibilities' => null,
'mail_header_footer' => null,
'newsletter_recipients' => null,
'mail_templates' => null,
'number_range_sales_channels' => null,
'promotion_sales_channels' => null,
'document_base_config_sales_channels' => null,
'product_reviews' => null,
'seo_urls' => null,
'seo_url_templates' => null,
'main_categories' => null,
'product_exports' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'currencies' => 'currencies',
'languages' => 'languages',
'countries' => 'countries',
'payment_methods' => 'paymentMethods',
'shipping_methods' => 'shippingMethods',
'type' => 'type',
'language' => 'language',
'customer_group' => 'customerGroup',
'currency' => 'currency',
'payment_method' => 'paymentMethod',
'shipping_method' => 'shippingMethod',
'country' => 'country',
'orders' => 'orders',
'customers' => 'customers',
'domains' => 'domains',
'system_configs' => 'systemConfigs',
'navigation_category' => 'navigationCategory',
'footer_category' => 'footerCategory',
'service_category' => 'serviceCategory',
'product_visibilities' => 'productVisibilities',
'mail_header_footer' => 'mailHeaderFooter',
'newsletter_recipients' => 'newsletterRecipients',
'mail_templates' => 'mailTemplates',
'number_range_sales_channels' => 'numberRangeSalesChannels',
'promotion_sales_channels' => 'promotionSalesChannels',
'document_base_config_sales_channels' => 'documentBaseConfigSalesChannels',
'product_reviews' => 'productReviews',
'seo_urls' => 'seoUrls',
'seo_url_templates' => 'seoUrlTemplates',
'main_categories' => 'mainCategories',
'product_exports' => 'productExports'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'currencies' => 'setCurrencies',
'languages' => 'setLanguages',
'countries' => 'setCountries',
'payment_methods' => 'setPaymentMethods',
'shipping_methods' => 'setShippingMethods',
'type' => 'setType',
'language' => 'setLanguage',
'customer_group' => 'setCustomerGroup',
'currency' => 'setCurrency',
'payment_method' => 'setPaymentMethod',
'shipping_method' => 'setShippingMethod',
'country' => 'setCountry',
'orders' => 'setOrders',
'customers' => 'setCustomers',
'domains' => 'setDomains',
'system_configs' => 'setSystemConfigs',
'navigation_category' => 'setNavigationCategory',
'footer_category' => 'setFooterCategory',
'service_category' => 'setServiceCategory',
'product_visibilities' => 'setProductVisibilities',
'mail_header_footer' => 'setMailHeaderFooter',
'newsletter_recipients' => 'setNewsletterRecipients',
'mail_templates' => 'setMailTemplates',
'number_range_sales_channels' => 'setNumberRangeSalesChannels',
'promotion_sales_channels' => 'setPromotionSalesChannels',
'document_base_config_sales_channels' => 'setDocumentBaseConfigSalesChannels',
'product_reviews' => 'setProductReviews',
'seo_urls' => 'setSeoUrls',
'seo_url_templates' => 'setSeoUrlTemplates',
'main_categories' => 'setMainCategories',
'product_exports' => 'setProductExports'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'currencies' => 'getCurrencies',
'languages' => 'getLanguages',
'countries' => 'getCountries',
'payment_methods' => 'getPaymentMethods',
'shipping_methods' => 'getShippingMethods',
'type' => 'getType',
'language' => 'getLanguage',
'customer_group' => 'getCustomerGroup',
'currency' => 'getCurrency',
'payment_method' => 'getPaymentMethod',
'shipping_method' => 'getShippingMethod',
'country' => 'getCountry',
'orders' => 'getOrders',
'customers' => 'getCustomers',
'domains' => 'getDomains',
'system_configs' => 'getSystemConfigs',
'navigation_category' => 'getNavigationCategory',
'footer_category' => 'getFooterCategory',
'service_category' => 'getServiceCategory',
'product_visibilities' => 'getProductVisibilities',
'mail_header_footer' => 'getMailHeaderFooter',
'newsletter_recipients' => 'getNewsletterRecipients',
'mail_templates' => 'getMailTemplates',
'number_range_sales_channels' => 'getNumberRangeSalesChannels',
'promotion_sales_channels' => 'getPromotionSalesChannels',
'document_base_config_sales_channels' => 'getDocumentBaseConfigSalesChannels',
'product_reviews' => 'getProductReviews',
'seo_urls' => 'getSeoUrls',
'seo_url_templates' => 'getSeoUrlTemplates',
'main_categories' => 'getMainCategories',
'product_exports' => 'getProductExports'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['currencies'] = isset($data['currencies']) ? $data['currencies'] : null;
        $this->container['languages'] = isset($data['languages']) ? $data['languages'] : null;
        $this->container['countries'] = isset($data['countries']) ? $data['countries'] : null;
        $this->container['payment_methods'] = isset($data['payment_methods']) ? $data['payment_methods'] : null;
        $this->container['shipping_methods'] = isset($data['shipping_methods']) ? $data['shipping_methods'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['customer_group'] = isset($data['customer_group']) ? $data['customer_group'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['shipping_method'] = isset($data['shipping_method']) ? $data['shipping_method'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['orders'] = isset($data['orders']) ? $data['orders'] : null;
        $this->container['customers'] = isset($data['customers']) ? $data['customers'] : null;
        $this->container['domains'] = isset($data['domains']) ? $data['domains'] : null;
        $this->container['system_configs'] = isset($data['system_configs']) ? $data['system_configs'] : null;
        $this->container['navigation_category'] = isset($data['navigation_category']) ? $data['navigation_category'] : null;
        $this->container['footer_category'] = isset($data['footer_category']) ? $data['footer_category'] : null;
        $this->container['service_category'] = isset($data['service_category']) ? $data['service_category'] : null;
        $this->container['product_visibilities'] = isset($data['product_visibilities']) ? $data['product_visibilities'] : null;
        $this->container['mail_header_footer'] = isset($data['mail_header_footer']) ? $data['mail_header_footer'] : null;
        $this->container['newsletter_recipients'] = isset($data['newsletter_recipients']) ? $data['newsletter_recipients'] : null;
        $this->container['mail_templates'] = isset($data['mail_templates']) ? $data['mail_templates'] : null;
        $this->container['number_range_sales_channels'] = isset($data['number_range_sales_channels']) ? $data['number_range_sales_channels'] : null;
        $this->container['promotion_sales_channels'] = isset($data['promotion_sales_channels']) ? $data['promotion_sales_channels'] : null;
        $this->container['document_base_config_sales_channels'] = isset($data['document_base_config_sales_channels']) ? $data['document_base_config_sales_channels'] : null;
        $this->container['product_reviews'] = isset($data['product_reviews']) ? $data['product_reviews'] : null;
        $this->container['seo_urls'] = isset($data['seo_urls']) ? $data['seo_urls'] : null;
        $this->container['seo_url_templates'] = isset($data['seo_url_templates']) ? $data['seo_url_templates'] : null;
        $this->container['main_categories'] = isset($data['main_categories']) ? $data['main_categories'] : null;
        $this->container['product_exports'] = isset($data['product_exports']) ? $data['product_exports'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets currencies
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCurrencies
     */
    public function getCurrencies()
    {
        return $this->container['currencies'];
    }

    /**
     * Sets currencies
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCurrencies $currencies currencies
     *
     * @return $this
     */
    public function setCurrencies($currencies)
    {
        $this->container['currencies'] = $currencies;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsLanguages
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsLanguages $languages languages
     *
     * @return $this
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets countries
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCountries
     */
    public function getCountries()
    {
        return $this->container['countries'];
    }

    /**
     * Sets countries
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCountries $countries countries
     *
     * @return $this
     */
    public function setCountries($countries)
    {
        $this->container['countries'] = $countries;

        return $this;
    }

    /**
     * Gets payment_methods
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsPaymentMethods
     */
    public function getPaymentMethods()
    {
        return $this->container['payment_methods'];
    }

    /**
     * Sets payment_methods
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsPaymentMethods $payment_methods payment_methods
     *
     * @return $this
     */
    public function setPaymentMethods($payment_methods)
    {
        $this->container['payment_methods'] = $payment_methods;

        return $this;
    }

    /**
     * Gets shipping_methods
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsShippingMethods
     */
    public function getShippingMethods()
    {
        return $this->container['shipping_methods'];
    }

    /**
     * Sets shipping_methods
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsShippingMethods $shipping_methods shipping_methods
     *
     * @return $this
     */
    public function setShippingMethods($shipping_methods)
    {
        $this->container['shipping_methods'] = $shipping_methods;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsType
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsType $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsLanguage
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsLanguage $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets customer_group
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCustomerGroup
     */
    public function getCustomerGroup()
    {
        return $this->container['customer_group'];
    }

    /**
     * Sets customer_group
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCustomerGroup $customer_group customer_group
     *
     * @return $this
     */
    public function setCustomerGroup($customer_group)
    {
        $this->container['customer_group'] = $customer_group;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCurrency
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCurrency $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsPaymentMethod
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsPaymentMethod $payment_method payment_method
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets shipping_method
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsShippingMethod
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsShippingMethod $shipping_method shipping_method
     *
     * @return $this
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets country
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCountry
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCountry $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsOrders
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsOrders $orders orders
     *
     * @return $this
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets customers
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsCustomers
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsCustomers $customers customers
     *
     * @return $this
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets domains
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsDomains
     */
    public function getDomains()
    {
        return $this->container['domains'];
    }

    /**
     * Sets domains
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsDomains $domains domains
     *
     * @return $this
     */
    public function setDomains($domains)
    {
        $this->container['domains'] = $domains;

        return $this;
    }

    /**
     * Gets system_configs
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsSystemConfigs
     */
    public function getSystemConfigs()
    {
        return $this->container['system_configs'];
    }

    /**
     * Sets system_configs
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsSystemConfigs $system_configs system_configs
     *
     * @return $this
     */
    public function setSystemConfigs($system_configs)
    {
        $this->container['system_configs'] = $system_configs;

        return $this;
    }

    /**
     * Gets navigation_category
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsNavigationCategory
     */
    public function getNavigationCategory()
    {
        return $this->container['navigation_category'];
    }

    /**
     * Sets navigation_category
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsNavigationCategory $navigation_category navigation_category
     *
     * @return $this
     */
    public function setNavigationCategory($navigation_category)
    {
        $this->container['navigation_category'] = $navigation_category;

        return $this;
    }

    /**
     * Gets footer_category
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsFooterCategory
     */
    public function getFooterCategory()
    {
        return $this->container['footer_category'];
    }

    /**
     * Sets footer_category
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsFooterCategory $footer_category footer_category
     *
     * @return $this
     */
    public function setFooterCategory($footer_category)
    {
        $this->container['footer_category'] = $footer_category;

        return $this;
    }

    /**
     * Gets service_category
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsServiceCategory
     */
    public function getServiceCategory()
    {
        return $this->container['service_category'];
    }

    /**
     * Sets service_category
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsServiceCategory $service_category service_category
     *
     * @return $this
     */
    public function setServiceCategory($service_category)
    {
        $this->container['service_category'] = $service_category;

        return $this;
    }

    /**
     * Gets product_visibilities
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsProductVisibilities
     */
    public function getProductVisibilities()
    {
        return $this->container['product_visibilities'];
    }

    /**
     * Sets product_visibilities
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsProductVisibilities $product_visibilities product_visibilities
     *
     * @return $this
     */
    public function setProductVisibilities($product_visibilities)
    {
        $this->container['product_visibilities'] = $product_visibilities;

        return $this;
    }

    /**
     * Gets mail_header_footer
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsMailHeaderFooter
     */
    public function getMailHeaderFooter()
    {
        return $this->container['mail_header_footer'];
    }

    /**
     * Sets mail_header_footer
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsMailHeaderFooter $mail_header_footer mail_header_footer
     *
     * @return $this
     */
    public function setMailHeaderFooter($mail_header_footer)
    {
        $this->container['mail_header_footer'] = $mail_header_footer;

        return $this;
    }

    /**
     * Gets newsletter_recipients
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsNewsletterRecipients
     */
    public function getNewsletterRecipients()
    {
        return $this->container['newsletter_recipients'];
    }

    /**
     * Sets newsletter_recipients
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsNewsletterRecipients $newsletter_recipients newsletter_recipients
     *
     * @return $this
     */
    public function setNewsletterRecipients($newsletter_recipients)
    {
        $this->container['newsletter_recipients'] = $newsletter_recipients;

        return $this;
    }

    /**
     * Gets mail_templates
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsMailTemplates
     */
    public function getMailTemplates()
    {
        return $this->container['mail_templates'];
    }

    /**
     * Sets mail_templates
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsMailTemplates $mail_templates mail_templates
     *
     * @return $this
     */
    public function setMailTemplates($mail_templates)
    {
        $this->container['mail_templates'] = $mail_templates;

        return $this;
    }

    /**
     * Gets number_range_sales_channels
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsNumberRangeSalesChannels
     */
    public function getNumberRangeSalesChannels()
    {
        return $this->container['number_range_sales_channels'];
    }

    /**
     * Sets number_range_sales_channels
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsNumberRangeSalesChannels $number_range_sales_channels number_range_sales_channels
     *
     * @return $this
     */
    public function setNumberRangeSalesChannels($number_range_sales_channels)
    {
        $this->container['number_range_sales_channels'] = $number_range_sales_channels;

        return $this;
    }

    /**
     * Gets promotion_sales_channels
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsPromotionSalesChannels
     */
    public function getPromotionSalesChannels()
    {
        return $this->container['promotion_sales_channels'];
    }

    /**
     * Sets promotion_sales_channels
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsPromotionSalesChannels $promotion_sales_channels promotion_sales_channels
     *
     * @return $this
     */
    public function setPromotionSalesChannels($promotion_sales_channels)
    {
        $this->container['promotion_sales_channels'] = $promotion_sales_channels;

        return $this;
    }

    /**
     * Gets document_base_config_sales_channels
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsDocumentBaseConfigSalesChannels
     */
    public function getDocumentBaseConfigSalesChannels()
    {
        return $this->container['document_base_config_sales_channels'];
    }

    /**
     * Sets document_base_config_sales_channels
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsDocumentBaseConfigSalesChannels $document_base_config_sales_channels document_base_config_sales_channels
     *
     * @return $this
     */
    public function setDocumentBaseConfigSalesChannels($document_base_config_sales_channels)
    {
        $this->container['document_base_config_sales_channels'] = $document_base_config_sales_channels;

        return $this;
    }

    /**
     * Gets product_reviews
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsProductReviews
     */
    public function getProductReviews()
    {
        return $this->container['product_reviews'];
    }

    /**
     * Sets product_reviews
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsProductReviews $product_reviews product_reviews
     *
     * @return $this
     */
    public function setProductReviews($product_reviews)
    {
        $this->container['product_reviews'] = $product_reviews;

        return $this;
    }

    /**
     * Gets seo_urls
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsSeoUrls
     */
    public function getSeoUrls()
    {
        return $this->container['seo_urls'];
    }

    /**
     * Sets seo_urls
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsSeoUrls $seo_urls seo_urls
     *
     * @return $this
     */
    public function setSeoUrls($seo_urls)
    {
        $this->container['seo_urls'] = $seo_urls;

        return $this;
    }

    /**
     * Gets seo_url_templates
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsSeoUrlTemplates
     */
    public function getSeoUrlTemplates()
    {
        return $this->container['seo_url_templates'];
    }

    /**
     * Sets seo_url_templates
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsSeoUrlTemplates $seo_url_templates seo_url_templates
     *
     * @return $this
     */
    public function setSeoUrlTemplates($seo_url_templates)
    {
        $this->container['seo_url_templates'] = $seo_url_templates;

        return $this;
    }

    /**
     * Gets main_categories
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsMainCategories
     */
    public function getMainCategories()
    {
        return $this->container['main_categories'];
    }

    /**
     * Sets main_categories
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsMainCategories $main_categories main_categories
     *
     * @return $this
     */
    public function setMainCategories($main_categories)
    {
        $this->container['main_categories'] = $main_categories;

        return $this;
    }

    /**
     * Gets product_exports
     *
     * @return \Swagger\Client\Model\SalesChannelRelationshipsProductExports
     */
    public function getProductExports()
    {
        return $this->container['product_exports'];
    }

    /**
     * Sets product_exports
     *
     * @param \Swagger\Client\Model\SalesChannelRelationshipsProductExports $product_exports product_exports
     *
     * @return $this
     */
    public function setProductExports($product_exports)
    {
        $this->container['product_exports'] = $product_exports;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
